#!/bin/bash

source $PWD/scripts/scripts.cfg
[ $? != 0 ] && echo -e "\nerror: running scripts from wrong directory!" && exit -1

function plot-stamp {
	tmpdatafile=$1
	graphfilename=$2
	ylabel=$3
	gnuplot <<-EOF
		set encoding utf8
		set terminal postscript eps enhanced color size 9.60,2.80 font "NimbusSanL-Bold,16"
		set output '$GRAPHDIR/$graphfilename.eps'
	
		# estilo das linhas
		set style line 1 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "black"
		set style line 2 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#8C1717" #scarlet
		set style line 3 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#EE7621" #chocolate2
		set style line 4 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#99CC32" #yellowgreen
		set style line 5 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#00688B" #deepskyblue4
		set style line 6 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#8B6969" #rosybrown4
		
		set xtics out nomirror
		set ytics out nomirror
		set grid y

		set ylabel "$ylabel" offset 1.8
		set xlabel "  " offset 1

		apps = "$STAMP_APPS"
		set for[i=1:words(apps)] label word(apps,i) at (2*i-1)*2.5,-0.55 center

		plot for[j=2:$NCOLUMNS:2] "$tmpdatafile" index 0 u 1:j:xtic(1) w lp ls j/2 t column(j) , \
		for[i=1:words(apps)-1] for[j=2:$NCOLUMNS:2] "$tmpdatafile" index i u (5*i + column(0)):j:xtic(1) w lp ls j/2 notitle
																	
		set terminal pop
		set output
	EOF
}

function plot-txcycles {
	tmpdatafile=$1
	graphfilename=$2
	ylabel=$3
	xlabel=$4
	gnuplot <<-EOF
		set encoding utf8
		set terminal postscript eps enhanced color size 9.60,2.80 font "NimbusSanL-Bold,16"
		set output '$GRAPHDIR/$graphfilename.eps'
	
		# estilo das linhas
		set style line 1 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "black"
		set style line 2 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#8C1717" #scarlet
		set style line 3 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#EE7621" #chocolate2
		set style line 4 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#99CC32" #yellowgreen
		set style line 5 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#00688B" #deepskyblue4
		set style line 6 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#8B6969" #rosybrown4
		set style line 7 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#2F4F4F" #darkslategrey
		set style line 8 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#CD5C5C" #indianred
		
		#set xtics out nomirror
		unset xtics
		set ytics out nomirror
		set grid y
		unset key

		set ylabel "$ylabel" offset 1.8
		set xlabel "$xlabel" offset 0,-1.5
		#set xlabel " " offset 1

		apps = "$_STAMP_APPS"
		set for[i=1:words(apps)] label word(apps,i) at (2*i-1)*2.95,-5.00 center

		#plot for[j=0:words(apps)-1] "$tmpdatafile" index j u (\$1 + 6*j):2:xtic(sprintf("%d",column(0))) w lp ls j+1 notitle
		plot for[j=0:words(apps)-1] "$tmpdatafile" index j u (\$1 + 6*j):2 w lp ls j+1 notitle, \
		     for[j=0:words(apps)-1] "$tmpdatafile" index j u (\$1 + 6*j):(\$2 > 20.0 ? (\$2 + 5.0) :1/0):(sprintf("%0.2f",\$3)) w labels

		set terminal pop
		set output
	EOF
}

function plot-STAMP-energy {
	rm -f {tsx-hle,tsx-rtm1,tsx-rtm2,tinySTM,seq,lock}.energy
	gov='ondemand'
	for app in $APPS; do
		eval $app=$(sed -n '2,$'p $output/$app-seq-$gov.energy | cut -d' ' -f1)
		sed -n '2,$'p $output/$app-tsx-hle-$gov.energy                   | awk '{print $1/'${!app}'," ",$2}'     >> tsx-hle.energy
		sed -n '2,$'p $output/$app-tsx-rtm-glock-simple_lock-$gov.energy | awk '{print $1/'${!app}'," ",$2}'     >> tsx-rtm1.energy
		sed -n '2,$'p $output/$app-tsx-rtm-glock-hle_lock-$gov.energy    | awk '{print $1/'${!app}'," ",$2}'     >> tsx-rtm2.energy
		sed -n '2,$'p $output/$app-ETL-SUICIDE-$gov.energy               | awk '{print $1/'${!app}'," ",$2}'     >> tinySTM.energy
		sed -n '2,$'p $output/$app-lock-$gov.energy                      | awk '{print $1/'${!app}'," ",$2}'     >> lock.energy
		echo >> tsx-hle.energy
		echo >> tsx-rtm1.energy
		echo >> tsx-rtm2.energy
		echo >> tinySTM.energy
		echo >> lock.energy
	done
	test -e $gnuplot && $gnuplot <<-EOF
		set encoding utf8
		set terminal postscript eps enhanced color size 9.60,2.80 font "NimbusSanL-Bold,16"
		set output '$output/stamp-energy.eps'
	
		# estilo das linhas
		set style line 1 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "black"
		set style line 2 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#8C1717" #scarlet
		set style line 3 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#EE7621" #chocolate2
		set style line 4 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#99CC32" #yellowgreen
		set style line 5 lt 1 lw 5.0 pt 7 ps 1.0 lc rgb "#8B6969" #rosybrown4
		
		set xtics 0,5,10 nomirror format ""
		set xtics add 5 out scale 6,2
		set mxtics 5
		set ytics out nomirror
		set grid y
	
		set ylabel "Energy (Joules)" offset 1.8
		
		ncores = "| $NB_CORES"
		apps = "$APPS"
		set for[i=1:words(ncores)*words(apps)] label word(ncores,i%5 + 1) at i,0.2 center
		set for[i=1:words(apps)] label word(apps,i) at (2*i-1)*2.5,0.0 center

		plot "tsx-hle.energy"  u (column(0) + 1 + int(column(0)/4)):1 w lp ls 1 t 'HLE', \
		     "tsx-rtm1.energy" u (column(0) + 1 + int(column(0)/4)):1 w lp ls 2 t 'RTM-1', \
		     "tsx-rtm2.energy" u (column(0) + 1 + int(column(0)/4)):1 w lp ls 3 t 'RTM-2', \
				 "tinySTM.energy"  u (column(0) + 1 + int(column(0)/4)):1 w lp ls 4 t 'tinySTM',\
				 "lock.energy"     u (column(0) + 1 + int(column(0)/4)):1 w lp ls 5 t 'LOCK'
		
		set terminal pop
		set output
	EOF
	rm -f {tsx-hle,tsx-rtm1,tsx-rtm2,tinySTM,seq,lock}.energy
}

function plot-STAMP-rtm {
	rm -f *.speedup
	gov=ondemand
	for app in $APPS; do
		eval $app=$(sed -n '2,$'p $output/$app-seq-$gov.time | cut -d' ' -f1)
		sed -n '2,$'p $output/$app-tsx-rtm-glock-simple_lock-$gov.time   | awk '{print '${!app}'/$1," ",$2}' >> tsx-rtm1.speedup
		sed -n '2,$'p $output/$app-tsx-rtm-glock-hle_lock-$gov.time      | awk '{print '${!app}'/$1," ",$2}' >> tsx-rtm2.speedup
		sed -n '2,$'p $output/$app-tsx-rtm-diegues-simple_lock-$gov.time | awk '{print '${!app}'/$1," ",$2}' >> tsx-rtm3.speedup
		echo >> tsx-rtm1.speedup
		echo >> tsx-rtm2.speedup
		echo >> tsx-rtm3.speedup
	done
	test -e $gnuplot && $gnuplot <<-EOF
		set encoding utf8
		set terminal postscript eps enhanced color size 9.60,2.80 font "NimbusSanL-Bold,16"
		set output '$output/stamp-speedup-rtm.eps'
	
		# estilo das linhas
		set style line 1 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "black"
		set style line 2 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#8C1717" #scarlet
		set style line 3 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#EE7621" #chocolate2
		set style line 4 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#99CC32" #yellowgreen
		set style line 5 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#00688B" #deepskyblue4
	
		set ylabel "Speedup (relação ao sequencial)" offset 1.8

		set style data histogram
		set style histogram cluster gap 1
		set style fill solid border -1
		set boxwidth 0.9
		set style fill solid border -1
		
		set xtics -0.5,4 nomirror format ""
		set xtics out scale 5,2
		set ytics out nomirror
		set grid y
		ncores = "$NB_CORES"
		apps = "$APPS"
		set for[i=0:words(ncores)*words(apps)-1] label word(ncores,i%4 + 1) at i,-0.15 center
		set for[i=1:words(apps)] label word(apps,i) at ((i-1)*4.0 + 1.5),-0.38 center
		
		set yrange [0:]

		plot "tsx-rtm1.speedup" u 1 ls 1 t 'RTM'     ,\
				 "tsx-rtm2.speedup" u 1 ls 2 t 'RTM+HLE' ,\
				 "tsx-rtm3.speedup" u 1 ls 3 t 'Diegues'
		
		set terminal pop
		set output
	EOF
	rm -f *.speedup
}


function plot-STAMP-edp {
	
	#bayes='set key bottom left horizontal samplen 1.5 spacing 1 font ",16";'
	bayes='set key left font ",16";'
	echo -n "| "$NB_CORES | sed 's| |\n|g' > cores.temp
	for app in ${APPS};
	do
		seqEDP="$(paste $output/$app-seq.{energy,time}  | awk 'NR == 2 {print $1*$3}')"
		seqTime="$(cat $output/$app-seq.time            | awk 'NR == 2 {print $1}')"
		for i in $NB_CORES; do awk 'NR > 1 {print $1}' $output/$app-seq.time >> $app-seq.time; done
		for i in $NB_CORES; do awk 'NR > 1 {print $1}' $output/$app-seq.energy >> $app-seq.energy; done
		paste $output/$app-lock.{time,energy}                   | awk 'NR > 1 {print $1*$3}' > $output/$app-lock.edp
		paste $output/$app-tsx-rtm-spinlock1.{time,energy}     | awk 'NR > 1 {print $1*$3}' > $output/$app-tsx-rtm-spinlock1.edp
		paste $output/$app-tsx-hle.{time,energy}                | awk 'NR > 1 {print $1*$3}' > $output/$app-tsx-hle.edp
		paste $output/$app-ETL-SUICIDE.{time,energy}            | awk 'NR > 1 {print $1*$3}' > $output/$app-ETL-SUICIDE.edp
		lp=' w lp'
		err=':2 w errorlines'
		styles='lp err'
		for style in $styles; do
			test -e $gnuplot && $gnuplot <<-EOF
				set encoding utf8
				set terminal postscript eps enhanced color size 6.80,3.20 font "NimbusSanL-Bold,20"
				set output '${output}/$app-$style.eps'
	
				set multiplot layout 1,2 title "${app^}"
				set tmargin 0
				set rmargin 1.2
	
				# estilos das linhas
				set style line 1 lt 1 lw 10.0  pt 7 ps 2.0 lc rgb "black"
				set style line 2 lt 1 lw 12.0 pt 7 ps 2.0 lc rgb "#8C1717" #scarlet
				set style line 3 lt 1 lw 12.0 pt 7 ps 2.0 lc rgb "#EE7621" #chocolate2
				set style line 4 lt 1 lw 12.0 pt 7 ps 2.0 lc rgb "#99CC32" #yellowgreen
				set style line 5 lt 1 lw 12.0 pt 7 ps 2.0 lc rgb "#00688B" #deepskyblue4
				set style line 6 lt 1 lw 12.0 pt 7 ps 2.0 lc rgb "#8B6969" #rosybrown4
				
				# estilo das barras
				set style line 7 lt 1 lw 1.0 lc rgb "#8C1717" #scarlet
				set style line 8 lt 1 lw 1.0 lc rgb "#EE7621" #chocolate2
				set style line 9 lt 1 lw 1.0 lc rgb "#99CC32" #yellowgreen
				set style line 10 lt 1 lw 1.0 lc rgb "#00688B" #deepskyblue4
				
				set xtics out nomirror
				set ytics out nomirror
				set grid y
				unset xlabel
			
				set logscale x 2
	
				# Execution time plot
				set ylabel "Tempo de Execução (s)" offset 1.5
				unset key
				set size 0.50,0.9
					
				plot "$output/$app-ETL-SUICIDE.time"       u (2**column(0)):1${!style} ls 2 t 'STM' ,\
						 "$output/$app-lock.time"              u (2**column(0)):1${!style} ls 3 t 'LOCK',\
						 "$output/$app-tsx-rtm-spinlock1.time" u (2**column(0)):1${!style} ls 4 t 'RTM-1' ,\
						 "$output/$app-tsx-rtm-spinlock2.time" u (2**column(0)):1${!style} ls 5 t 'RTM-2' ,\
						 "$output/$app-tsx-hle.time"           u (2**column(0)):1${!style} ls 6 t 'HLE' ,\
						 "$app-seq.time"                       u (2**column(0)):1 w l ls 1 t 'SEQ'
	
				# Energy plot
				set ylabel "Energia Consumida (J)" offset 2.8
				set grid y
				unset key
				set key horizontal right font ",16"
				#${!app}
				set size 0.50,0.9
				set ytics offset 0.8,graph 0
				set rmargin 1.0
				set lmargin 6.0
	
				plot "$output/$app-ETL-SUICIDE.energy"       u (2**column(0)):1 w lp ls 2 t 'STM' ,\
						 "$output/$app-lock.energy"              u (2**column(0)):1 w lp ls 3 t 'LOCK',\
						 "$output/$app-tsx-rtm-spinlock1.energy" u (2**column(0)):1 w lp ls 4 t 'RTM-1' ,\
						 "$output/$app-tsx-rtm-spinlock2.energy" u (2**column(0)):1 w lp ls 5 t 'RTM-2' ,\
						 "$output/$app-tsx-hle.energy"           u (2**column(0)):1 w lp ls 6 t 'HLE' ,\
						 "$app-seq.energy"                       u (2**column(0)):1 w l  ls 1 t 'SEQ'
	#
	#			# EDP plot
	#			set ylabel "EDP normalizado" offset 1.8
	#			set style data histograms
	#			set style histogram cluster gap 2
	#			set style fill solid border -1
	#			set boxwidth 0.9
	#			set xrange [-0.3:3.5]
	#			set yrange [0:]
	#			unset key
	#			set size 0.32,0.9
	#
	#			plot "$output/$app-ETL-SUICIDE.edp"      u (column(2)/$seqEDP):xtic(1) ls 6 t 'STM' ,\
	#					 "$output/$app-lock.edp"             u (column(1)/$seqEDP) ls 7 t 'LOCK',\
	#					 "$output/$app-tsx-rtm-spinlock.edp" u (column(1)/$seqEDP) ls 8 t 'RTM' ,\
	#					 "$output/$app-tsx-hle.edp"          u (column(1)/$seqEDP) ls 9 t 'HLE'
	
				unset multiplot
		
				set terminal pop
				set output
			EOF
		done
		rm $output/*.edp $app-seq.{time,energy}
	done # FOR EACH APP
	rm cores.temp
}

function stamp-default-gov {
	
	vacation='set key right font ",16" nobox;'
	gov='ondemand'
	echo -n "| "$NB_CORES | sed 's| |\n|g' > cores.temp
	for app in ${APPS};
	do
		seqTime="$(cat $output/$app-seq-$gov.time | awk 'NR == 2 {print $1}')"
		seqEDP="$(paste $output/$app-seq-$gov.{energy,time}  | awk 'NR == 2 {print $1*$3}')"
		for i in $NB_CORES; do awk 'NR > 1 {print "'$i'"," ",$1}' $output/$app-seq-$gov.time   >> $app-seq-$gov.time;   done
		for i in $NB_CORES; do awk 'NR > 1 {print "'$i'"," ",$1}' $output/$app-seq-$gov.energy >> $app-seq-$gov.energy; done
		paste $output/$app-tsx-rtm-spinlock1-$gov.{time,energy} | awk 'NR > 1 {print ($1*$3)/'$seqEDP'}' > $output/$app-tsx-rtm-spinlock1.edp
		paste $output/$app-tsx-hle-$gov.{time,energy}           | awk 'NR > 1 {print ($1*$3)/'$seqEDP'}' > $output/$app-tsx-hle.edp
		paste $output/$app-ETL-SUICIDE-$gov.{time,energy}       | awk 'NR > 1 {print ($1*$3)/'$seqEDP'}' > $output/$app-ETL-SUICIDE.edp
		test -e $gnuplot && $gnuplot <<-EOF
			set encoding utf8
			set terminal postscript eps enhanced color size 6.40,3.20 font "NimbusSanL-Bold,20"
			set output '${output}/$app-$gov.eps'

			set multiplot layout 1,2 title "${app^}"
			set tmargin 0
			set rmargin 0.25

			# estilos das linhas
			set style line 1 lt 1 lw 10.0 pt 7 ps 2.0 lc rgb "black"
			set style line 2 lt 1 lw 1.0 pt 7 ps 2.0 lc rgb "#8C1717" #scarlet
			set style line 3 lt 1 lw 1.0 pt 7 ps 2.0 lc rgb "#EE7621" #chocolate2
			set style line 4 lt 1 lw 1.0 pt 7 ps 2.0 lc rgb "#99CC32" #yellowgreen
			set style line 5 lt 1 lw 1.0 pt 7 ps 2.0 lc rgb "#00688B" #deepskyblue4
			set style line 6 lt 1 lw 1.0 pt 7 ps 2.0 lc rgb "#8B6969" #rosybrown4
			
			set xtics out nomirror
			set ytics out nomirror
			set grid y
			unset xlabel
			set style data histograms
			set style histogram cluster gap 2
			set style fill solid border -1
			set boxwidth 0.9

			set xrange [-0.35:3.50]

			# Execution time plot
			set ylabel "Tempo de Execução (s)" offset 1.5
			set size 0.49,0.9
			unset key
			${!app}
				
			plot "$output/$app-ETL-SUICIDE-$gov.time"       u 1 ls 2 t 'STM' ,\
					 "$output/$app-tsx-rtm-spinlock1-$gov.time" u 1 ls 4 t 'RTM' ,\
					 "$output/$app-tsx-hle-$gov.time"           u 1 ls 5 t 'HLE' ,\
					 "$app-seq-$gov.time"                       u 2:xtic(1) w l ls 1 t 'SEQ'

			set lmargin 5.8
			# Energy plot
			set ylabel "Energia Consumida (J)" offset 2.8
			set grid y
			set key horizontal right font ",16"
			set size 0.49,0.9
			set ytics offset 0.8,graph 0
			unset key

			plot "$output/$app-ETL-SUICIDE-$gov.energy"       u 1 ls 2 t 'STM' ,\
					 "$output/$app-tsx-rtm-spinlock1-$gov.energy" u 1 ls 4 t 'RTM' ,\
					 "$output/$app-tsx-hle-$gov.energy"           u 1 ls 5 t 'HLE' ,\
					 "$app-seq-$gov.energy"                       u 2:xtic(1) w l  ls 1 t 'SEQ'
	
#			# EDP plot
#			set ylabel "EDP normalizado" offset 1.8
#			set style data histograms
#			set style histogram cluster gap 2
#			set style fill solid border -1
#			set boxwidth 0.9
#			#set xrange [-0.3:3.5]
#			set yrange [0:]
#			set size 0.32,0.9
#			unset key
#
#			plot "$output/$app-ETL-SUICIDE.edp"       u 1 ls 2 t 'STM' ,\
#					 "$output/$app-lock.edp"              u 1 ls 3 t 'LOCK',\
#					 "$output/$app-tsx-rtm-spinlock1.edp" u 1 ls 4 t 'RTM' ,\
#					 "$output/$app-tsx-hle.edp"           u 1 ls 5 t 'HLE'

			unset multiplot
	
			set terminal pop
			set output
		EOF
	rm $app-seq-$gov.{time,energy}
	done # FOR EACH APP
	rm cores.temp
}

function stamp-other-govs {
	rm -f {tsx-hle,tsx-rtm,tinySTM}.edp
	GOVS='powersave conservative userspace performance'
	for gov in $GOVS; do
		echo "$gov" >> tsx-hle.edp
		echo "$gov" >> tsx-rtm.edp
		echo "$gov" >> tinySTM.edp
		for app in $APPS; do
			hle=$(paste $output/$app-tsx-hle-ondemand.{time,energy}           | tail -2 | head -1 | awk '{print $1*$3}')
			rtm=$(paste $output/$app-tsx-rtm-spinlock1-ondemand.{time,energy} | tail -2 | head -1 | awk '{print $1*$3}')
			tiny=$(paste $output/$app-ETL-SUICIDE-ondemand.{time,energy}      | tail -2 | head -1 | awk '{print $1*$3}')
			paste $output/$app-tsx-hle-$gov.{time,energy}           | tail -2 | head -1 | awk '{print "'${app}'"," ",'${hle}'/($1*$3)}' >> tsx-hle.edp
			paste $output/$app-tsx-rtm-spinlock1-$gov.{time,energy} | tail -2 | head -1 | awk '{print "'${app}'"," ",'${rtm}'/($1*$3)}' >> tsx-rtm.edp
			paste $output/$app-ETL-SUICIDE-$gov.{time,energy}       | tail -2 | head -1 | awk '{print "'${app}'"," ",'${tiny}'/($1*$3)}' >> tinySTM.edp
		done
		echo -e '\n' >> tsx-hle.edp
		echo -e '\n' >> tsx-rtm.edp
		echo -e '\n' >> tinySTM.edp
	done
	test -e $gnuplot && $gnuplot <<-EOF
		set encoding utf8
		set terminal postscript eps enhanced color size 9.60,2.80 font "NimbusSanL-Bold,16"
		set output '$output/stamp-allgovs.eps'
	
		# estilo das linhas
		set style line 1 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#8C1717" #scarlet
		set style line 2 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#EE7621" #chocolate2
		set style line 3 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#99CC32" #yellowgreen
		set style line 4 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#00688B" #deepskyblue4
		
		set key left horizontal
		set ytics out nomirror
		set grid y
		
		set style data histograms
    set style histogram cluster gap 1
	  set style fill solid border rgb "black"
		set xtics border in scale 0,0 nomirror rotate by -40  offset character 0, 0, 0 autojustify

		set ylabel "Ganho em EDP" offset 1.8

		plot newhistogram 'HLE',     for[i=0:3] "tsx-hle.edp" index i u 2:xtic(1) ls i+1 title columnhead(1), \
		     newhistogram 'RTM',     for[i=0:3] "tsx-rtm.edp" index i u 2:xtic(1) ls i+1 notitle, \
			   newhistogram 'tinySTM', for[i=0:3] "tinySTM.edp" index i u 2:xtic(1) ls i+1 notitle
		
		set terminal ""
		set output
	EOF
	rm -f {tsx-hle,tsx-rtm,tinySTM}.edp
}

function stamp-edp-ondemand {
	rm -f {tsx-hle,tsx-rtm,tinySTM}.edp
	gov='ondemand'
	NCORES='1 2 4 8'
	ln='2'
	for ncores in $NCORES; do
		echo "\#$ncores" >> tsx-hle.edp
		echo "\#$ncores" >> tsx-rtm.edp
		echo "\#$ncores" >> tinySTM.edp
		for app in $APPS; do
			seqEDP=$(paste $output/$app-seq-$gov.{time,energy} | awk 'NR == 2 {print $1*$3}')
			paste $output/$app-tsx-hle-$gov.{time,energy}           | awk 'NR == '$ln' {print "'$app'"," ",'$seqEDP'/($1*$3)}' >> tsx-hle.edp
			paste $output/$app-tsx-rtm-spinlock1-$gov.{time,energy} | awk 'NR == '$ln' {print "'$app'"," ",'$seqEDP'/($1*$3)}' >> tsx-rtm.edp
			paste $output/$app-ETL-SUICIDE-$gov.{time,energy}       | awk 'NR == '$ln' {print "'$app'"," ",'$seqEDP'/($1*$3)}' >> tinySTM.edp
		done
		ln=$((ln+1))
		echo -e '\n' >> tsx-hle.edp
		echo -e '\n' >> tsx-rtm.edp
		echo -e '\n' >> tinySTM.edp
	done
	test -e $gnuplot && $gnuplot <<-EOF
		set encoding utf8
		set terminal postscript eps enhanced color size 9.60,2.80 font "NimbusSanL-Bold,16"
		set output '$output/stamp-edp.eps'
	
		# estilo das linhas
		set style line 1 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#8C1717" #scarlet
		set style line 2 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#EE7621" #chocolate2
		set style line 3 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#99CC32" #yellowgreen
		set style line 4 lt 1 lw 1.0 pt 7 ps 1.0 lc rgb "#00688B" #deepskyblue4
		
		set key left horizontal
		set ytics out nomirror
		set grid y
		set yrange [:5]
	
		f(x,y) = column(x) + 16 + (0.26*column(y)); 

		set style data histograms
    set style histogram cluster gap 1
	  set style fill solid border rgb "black"
		set xtics border in scale 0,0 nomirror rotate by -40  offset character 0, 0, 0 autojustify

		set ylabel "Ganho em EDP (relação ao seq-ondemand)" offset 1.8

		plot newhistogram 'HLE'          , for[i=0:3] "tsx-hle.edp" index i u 2:xtic(1) ls i+1 title columnhead(1), \
		     newhistogram 'RTM' at 7.5   , for[i=0:3] "tsx-rtm.edp" index i u 2:xtic(1) ls i+1 notitle, \
			   newhistogram 'tinySTM' at 16, for[i=0:3] "tinySTM.edp" index i u 2:xtic(1) ls i+1 notitle, \
			   "tinySTM.edp" u (f(0,-2)):(\$2 >= 5 ? 4.75 : 1/0):(sprintf("%.2f",\$2)) w labels rotate by 10 notitle
		
		set terminal ""
		set output
	EOF
	rm -f {tsx-hle,tsx-rtm,tinySTM}.edp
}


function plot {
	
	[ -d $GRAPHDIR ] || mkdir $GRAPHDIR
	
	test -z "$_BUILDS"           && _BUILDS=$BUILDS
	test -z "$_NTHREADS"         && _NTHREADS=$NTHREADS
	test -z "$_MEM_ALLOCS"       && _MEMALLOCS='ptmalloc'
	test "$_MEM_ALLOCS" == "ALL" && _MEMALLOCS=$MEM_ALLOCS
	test -z "$_GOVERNORS"        && _GOVERNORS='ondemand'
	test "$_GOVERNORS" == "ALL"  && _GOVERNORS=$GOVERNORS
	test -z "$_tinySTM_DESIGNS"  && _tinySTM_DESIGNS=$tinySTM_DESIGNS
	test -z "$_tinySTM_CMS"      && _tinySTM_CMS=$tinySTM_CMS
	test -z "$_STAMP_APPS"       && _STAMP_APPS=$STAMP_APPS
	test -z "$_rtm_CMS"          && _rtm_CMS=$rtm_CMS
	test -z "$_tsx_LOCKS"        && _tsx_LOCKS=$tsx_LOCKS

	case $PLOTSTYLE in
		stamp-speedup)
			tmpfile=speedup.tmp
			./scripts/genPlotData -c builds -d "$_tinySTM_DESIGNS" -b "$_BUILDS" -m "$_tinySTM_CMS" \
														-D "$_rtm_CMS" -l "$_tsx_LOCKS" -M "$_MEMALLOCS" -g "$_GOVERNORS"
			for gov in ${_GOVERNORS}; do
				for mem in ${_MEMALLOCS}; do
					rm -f $tmpfile
					for app in $STAMP_APPS; do
						cat $DATADIR/$app-$gov-$mem.speedup >> $tmpfile
						echo -e "\n" >> $tmpfile
					done
					NCOLUMNS="$(head -n1 $tmpfile | awk -F ' "' 'END{print NF}')"
					plot-stamp "$tmpfile" "stamp-speedup-$gov-$mem" "Speedup (relação ao sequencial)"
					rm -f $tmpfile
				done # FOR EACH MEMALLOC
			done # FOR EACH GOVERNOR
			;;
		stamp-energy)
			tmpfile=energy.tmp
			./scripts/genPlotData -c builds -d "$_tinySTM_DESIGNS" -b "$_BUILDS" -m "$_tinySTM_CMS" \
										-D "$_rtm_CMS" -l "$_tsx_LOCKS" -M "$_MEMALLOCS" -g "$_GOVERNORS"
			for gov in ${_GOVERNORS}; do
				for mem in ${_MEMALLOCS}; do
					rm -f $tmpfile
					for app in $STAMP_APPS; do
						cat $DATADIR/$app-$gov-$mem.energy >> $tmpfile
						echo -e "\n" >> $tmpfile
					done
					NCOLUMNS="$(head -n1 $tmpfile | awk -F ' "' 'END{print NF}')"
					plot-stamp "$tmpfile" "stamp-energy-$gov-$mem" "Energia (J) (normalizada)"
					rm -f $tmpfile
				done # FOR EACH MEMALLOC
			done # FOR EACH GOVERNOR
			;;
		stamp-aborts)
			echo "not implemented yet!" && exit -1
			;;
		stamp-txcycles)
			tmpfile=commits.tmp
			for build in ${_BUILDS}; do
				SUFFIXES=$build
				test $build == 'tinystm' && \
					SUFFIXES="$(eval echo -n $build-{${_tinySTM_DESIGNS// /,}}-{${_tinySTM_CMS// /,}} | sed 's|{||g;s|}||g')"
				test $build == 'rtm' && \
					SUFFIXES="$(eval echo -n $build-{${_rtm_CMS// /,}}-{${_tsx_LOCKS// /,}} | sed 's|{||g;s|}||g')"
				SUFFIXES="$(eval echo -n {${SUFFIXES// /,}}-{${_GOVERNORS// /,}} | sed 's|{||g;s|}||g')"
				SUFFIXES="$(eval echo -n {${SUFFIXES// /,}}-{${_MEMALLOCS// /,}} | sed 's|{||g;s|}||g')"
				for suffix in ${SUFFIXES}; do
					for t in ${_NTHREADS}; do
						rm -f $tmpfile
						for app in $STAMP_APPS; do
							proffile="$DATADIR/$app-$suffix-$t.prof"
							if [ ! -e $proffile ]; then
								colselection="5p;3p"
								[ "$build" == "rtm" ] && colselection="7p;3p"
								./scripts/genPlotData2 -p colselection -c $colselection -a $app -s "$suffix-$t"
							fi
							nlines=$(wc -l $proffile | cut -d' ' -f1)
							awk -v nlines=$nlines '{$1=($1+1)*(5/nlines);print;}' $proffile >> $tmpfile
							echo -e "\n" >> $tmpfile
						done # FOR EACH APP
						NCOLUMNS="$(head -n1 $tmpfile | awk -F ' "' 'END{print NF}')"
						echo -n "ploting 'stamp-txcycles-$suffix-$t'..."
						plot-txcycles "$tmpfile" "stamp-txcycles-$suffix-$t" "% dos ciclos" "Transações"
						echo "done."
						rm -f $tmpfile
					done # FOR EACH NTHREAD
				done # FOR EACH SUFFIX
			done # FOR EACH BUILD
			;;
		\?) usage && exit -1 ;;
	esac
}

while getopts "b:d:m:D:l:a:t:g:M:hp:" opt;
do
	case $opt in
		b) _BUILDS=$OPTARG ;;
		d) _tinySTM_DESIGNS=$OPTARG ;;
		m) _tinySTM_CMS=$OPTARG ;;
		D) _rtm_CMS=$OPTARG ;;
		l) _tsx_LOCKS=$OPTARG ;;
		a) _STAMP_APPS=$OPTARG ;;
		t) _NTHREADS=$OPTARG ;;
		g) _GOVERNORS=$OPTARG ;;
		M) _MEMALLOCS=$OPTARG ;;
		h) usage && exit -1 ;;
		p) PLOTSTYLE=$OPTARG ;;
		\?) echo $0" : error - invalid option -- $OPTARG"
			exit 1
	esac
done

plot
